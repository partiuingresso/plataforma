import 'bulma-tooltip';
import Rails from 'rails-ujs';
import "script-loader!<%= Rails.root.join('vendor', 'assets', 'javascript', 'instascan.min.js') %>";

var openCameraButton = document.getElementById('open-camera');
var openListButton = document.getElementById('open-list');
var switchCameraButton = document.getElementById('switch-camera');
var cameraList = null;
var camIdx = 0;

var resultElement = document.getElementById('qr-result');

var scanner = new Instascan.Scanner({
	video: document.getElementById('qr-video'),
	mirror: false,
	backgroundScan: false
});

init();

function init() {
	openCameraButton.addEventListener('click', function() {
		if(cameraList == null) {
			cameraList = Instascan.Camera.getCameras().then(function(cameras) {
				cameraList = cameras;
				if(cameraList.length > 0) {
					scanner.start(cameraList[0]);
				} else {
					console.error('No cameras found.');
				}
				if(cameraList.length > 1) {
					switchCameraButton.classList.remove('is-hidden');
					switchCameraButton.addEventListener('click', function() {
						scanner.stop().then(function() {
							camIdx = (camIdx + 1) % cameraList.length;
							scanner.start(cameraList[camIdx]);
						});
					});
				}
			}).catch(function(e){
				console.error(e);
			});
		} else {
			if(cameraList.length > 0) {
				scanner.start(cameraList[0]);
			} else {
				console.error('No cameras found.');
			}
		}
	});

	scanner.addListener('scan', function(content) {
		Rails.ajax({
			type: "GET",
			url: "/validations/" + content,
			success: function(response) {
				console.log('ticket found.');
				initNewValidationModal(true);
			},
			error: function(response) {
				console.log('ticket not found.');
			}
		});
	});

	openListButton.addEventListener('click', function() {
		scanner.stop();
	});
}


var modal = document.getElementById('modal');
var newValidationBody = document.getElementById('new-validation');
var successValidationBody = document.getElementById('success-validation');
var errorValidationBody = document.getElementById('error-validation');

var links = document.querySelectorAll('.validate-link');
for(let link of links) {
	link.addEventListener('ajax:success', function(e) {
		initNewValidationModal();
	});
}

function initNewValidationModal(confirmation=false) {
	var form = document.getElementById('new_validation');
	form.addEventListener('ajax:success', function(e) {
		if(confirmation) {
			cleanModal(newValidationBody);
			initSuccessValidationModal();
		} else {
			closeModal();
		}
	});

	var cancelButton = newValidationBody.querySelector('.button.cancel');
	cancelButton.addEventListener('click', function(e) {
		closeModal();
	});
}

function initSuccessValidationModal() {
	var button = document.getElementById('confirm-button');
	button.addEventListener('click', function(e) {
		closeModal();
	});
}

function cleanModal(modalBody) {
	modalBody.classList.add('is-hidden');
}

function closeModal() {
	newValidationBody.classList.add('is-hidden');
	successValidationBody.classList.add('is-hidden');
	errorValidationBody.classList.add('is-hidden');
	modal.classList.add('is-hidden');
}

window.onload = function() {
    var tablinks = document.getElementsByClassName("tablinks");
    tablinks[0].click();
}
